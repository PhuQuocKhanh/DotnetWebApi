// <auto-generated />
using BasicAuthenticationDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicAuthenticationDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BasicAuthenticationDemo.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "High performance laptop",
                            Name = "Laptop",
                            Price = 1200.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ergonomic wireless mouse",
                            Name = "Wireless Mouse",
                            Price = 25.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 3,
                            Description = "RGB backlit mechanical keyboard",
                            Name = "Mechanical Keyboard",
                            Price = 79.99m,
                            Stock = 45
                        });
                });

            modelBuilder.Entity("BasicAuthenticationDemo.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "Index_Email_Unique")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "pranaya.rout@example.com",
                            FullName = "Pranaya Rout",
                            PasswordHash = "ayRIdQoJLhXyufbY11KD1fXqmpf4aHDEXLWsdYmLZek=",
                            Role = "Administrator,Manager"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            PasswordHash = "D03WxnvIyCeisYG8dj+auWFm2PUIQP4a4LvA53Rk2iw=",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jane.smith@example.com",
                            FullName = "Jane Smith",
                            PasswordHash = "sKmBLz4SePwSKvTys+H4Zs9IpVJ7uaVmTJfqWPV5OzE=",
                            Role = "Manager"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
