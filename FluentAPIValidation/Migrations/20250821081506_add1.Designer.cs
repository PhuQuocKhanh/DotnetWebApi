// <auto-generated />
using System;
using FluentAPIValidation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluentAPIValidation.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250821081506_add1")]
    partial class add1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluentAPIValidation.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "High performance gaming laptop.",
                            Discount = 10m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gaming Laptop",
                            Price = 1500.00m,
                            SKU = "GAM12345",
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Efficient desktop for office work.",
                            Discount = 5m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Office Desktop",
                            Price = 800.00m,
                            SKU = "OFF12345",
                            Stock = 20
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Latest model smartphone.",
                            Discount = 0m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smartphone",
                            Price = 700.00m,
                            SKU = "SMA12345",
                            Stock = 50
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            Description = "Ergonomic wireless mouse.",
                            Discount = 15m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wireless Mouse",
                            Price = 50.00m,
                            SKU = "WIR12345",
                            Stock = 100
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            Description = "RGB mechanical keyboard.",
                            Discount = 20m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mechanical Keyboard",
                            Price = 120.00m,
                            SKU = "MEC12345",
                            Stock = 75
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            Description = "Ultra HD 4K monitor.",
                            Discount = 5m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "4K Monitor",
                            Price = 400.00m,
                            SKU = "4KMON12",
                            Stock = 30
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            Description = "Ergonomic gaming chair.",
                            Discount = 10m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gaming Chair",
                            Price = 300.00m,
                            SKU = "GAMCHAIR",
                            Stock = 15
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 5,
                            Description = "Portable Bluetooth speaker.",
                            Discount = 0m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bluetooth Speaker",
                            Price = 150.00m,
                            SKU = "BLU12345",
                            Stock = 40
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            Description = "Feature-packed smartwatch.",
                            Discount = 5m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smartwatch",
                            Price = 250.00m,
                            SKU = "SMAW1234",
                            Stock = 25
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 5,
                            Description = "HD home security camera.",
                            Discount = 10m,
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturingDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Home Security Camera",
                            Price = 100.00m,
                            SKU = "HOMECAM1",
                            Stock = 60
                        });
                });

            modelBuilder.Entity("FluentAPIValidation.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            Name = "electronics"
                        },
                        new
                        {
                            TagId = 2,
                            Name = "gaming"
                        },
                        new
                        {
                            TagId = 3,
                            Name = "office"
                        },
                        new
                        {
                            TagId = 4,
                            Name = "accessories"
                        },
                        new
                        {
                            TagId = 5,
                            Name = "home"
                        });
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTag");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            TagId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            TagId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            TagId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            TagId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            TagId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            TagId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            TagId = 2
                        },
                        new
                        {
                            ProductId = 7,
                            TagId = 3
                        },
                        new
                        {
                            ProductId = 8,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            TagId = 4
                        },
                        new
                        {
                            ProductId = 9,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            TagId = 4
                        },
                        new
                        {
                            ProductId = 10,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 10,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("FluentAPIValidation.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentAPIValidation.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
